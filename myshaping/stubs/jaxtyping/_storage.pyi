from ._errors import AnnotationError as AnnotationError
from typing import Any

def get_shape_memo(): ...
def set_shape_memo(single_memo, variadic_memo, pytree_memo, arg_memo) -> None: ...
def push_shape_memo(arguments: dict[str, Any]): ...
def pop_shape_memo() -> None: ...
def shape_str(memos) -> str: ...
def print_bindings() -> None: ...
def clear_treepath_memo() -> None: ...
def set_treepath_memo(index: int | None, structure: str) -> None: ...
def get_treepath_memo() -> str: ...
def clear_treeflatten_memo() -> None: ...
def set_treeflatten_memo() -> None: ...
def get_treeflatten_memo(): ...
